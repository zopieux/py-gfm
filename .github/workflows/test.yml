name: "Test and package"

on:
  push:
  pull_request:

jobs:
  test:
    name: "Test ${{ matrix.python-version }} ⋅ MD ${{ matrix.markdown-version }} ⋅ Pygments: ${{ matrix.pygments }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        markdown-version: ["3.3", "3.4", "unpined"]
        pygments: ["yes", "no"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          python -m pip install -r dev-requirements.txt
          if [ '${{ matrix.pygments }}' == 'yes' ]; then
            python -m pip install pygments
          fi
          python -m pip install -e .
          if [ '${{ matrix.markdown-version }}' != 'unpined' ]; then
            python -m pip install --force-reinstall 'markdown==${{ matrix.markdown-version }}'
          fi

      - name: Test py-gfm with coverage
        run: coverage run -m unittest discover tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  package:
    name: "Build Python package"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install -U pip wheel

      - name: Build source distribution
        run: python setup.py sdist

      - name: Build binary distribution (wheel)
        run: python setup.py bdist_wheel

  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install -U pip pre-commit

      - name: Lint
        run: pre-commit run --all-files
